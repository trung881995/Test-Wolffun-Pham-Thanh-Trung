{"version":3,"sources":["assets/scripts/Manager/ConfigManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {\n  FirstConfig,\n  YieldConfig,\n  CattleConfig,\n  PlantConfig,\n  WorkerConfig,\n  MachineConfig,\n  LandConfig,\n} from \"../../scripts/data/GameConfig\";\n\nexport class ConfigManager {\n  private static _instance: ConfigManager;\n  public static get instance(): ConfigManager {\n    if (!this._instance) {\n      this._instance = new ConfigManager();\n    }\n    return this._instance;\n  }\n\n  private firstConfigs: Map<string, FirstConfig> = new Map();\n  private yieldConfigs: Map<string, YieldConfig> = new Map();\n  private cattleConfigs: Map<string, CattleConfig> = new Map();\n  private plantConfigs: Map<string, PlantConfig> = new Map();\n  private workerConfigs: Map<string, WorkerConfig> = new Map();\n  private machineConfigs: Map<string, MachineConfig> = new Map();\n  private landConfigs: Map<string, LandConfig> = new Map();\n\n  public initFirstConfigs(configs: FirstConfig[]) {\n    this.firstConfigs.clear();\n    configs.forEach((config) => {\n      this.firstConfigs.set(config.name, config);\n    });\n  }\n\n  public getFirstConfigByName(name: string): FirstConfig | undefined {\n    return this.firstConfigs.get(name);\n  }\n\n  public getAllTomatoConfigs(): FirstConfig[] {\n    return Array.from(this.firstConfigs.values());\n  }\n\n  public initYieldConfigs(configs: YieldConfig[]) {\n    this.yieldConfigs.clear();\n    configs.forEach((config) => {\n      this.yieldConfigs.set(config.name, config);\n    });\n  }\n\n  public getYieldConfigByName(name: string): YieldConfig | undefined {\n    return this.yieldConfigs.get(name);\n  }\n\n  public getAllYieldConfigs(): YieldConfig[] {\n    return Array.from(this.yieldConfigs.values());\n  }\n\n  public initCattleConfigs(configs: CattleConfig[]) {\n    this.cattleConfigs.clear();\n    configs.forEach((config) => {\n      this.cattleConfigs.set(config.name, config);\n    });\n  }\n\n  public getCattleConfigByName(name: string): CattleConfig | undefined {\n    return this.cattleConfigs.get(name);\n  }\n\n  public getAllCattleConfigs(): CattleConfig[] {\n    return Array.from(this.cattleConfigs.values());\n  }\n\n  public initPlantConfigs(configs: PlantConfig[]) {\n    this.plantConfigs.clear();\n    configs.forEach((config) => {\n      this.plantConfigs.set(config.name, config);\n    });\n  }\n\n  public getPlantConfigByName(name: string): PlantConfig | undefined {\n    return this.plantConfigs.get(name);\n  }\n\n  public getAllPlantConfigs(): PlantConfig[] {\n    return Array.from(this.plantConfigs.values());\n  }\n\n  public initWorkerConfigs(configs: WorkerConfig[]) {\n    this.workerConfigs.clear();\n    configs.forEach((config) => {\n      this.workerConfigs.set(config.name, config);\n    });\n  }\n\n  public getWorkerConfigByName(name: string): WorkerConfig | undefined {\n    return this.workerConfigs.get(name);\n  }\n\n  public getAllWorkerConfigs(): WorkerConfig[] {\n    return Array.from(this.workerConfigs.values());\n  }\n\n  public initMachineConfigs(configs: MachineConfig[]) {\n    this.machineConfigs.clear();\n    configs.forEach((config) => {\n      this.machineConfigs.set(config.name, config);\n    });\n  }\n\n  public getMachineConfigByName(name: string): MachineConfig | undefined {\n    return this.machineConfigs.get(name);\n  }\n\n  public getAllMachineConfigs(): MachineConfig[] {\n    return Array.from(this.machineConfigs.values());\n  }\n\n  public initLandConfigs(configs: LandConfig[]) {\n    this.landConfigs.clear();\n    configs.forEach((config) => {\n      this.landConfigs.set(config.name, config);\n    });\n  }\n\n  public getLandConfigByName(name: string): LandConfig | undefined {\n    return this.landConfigs.get(name);\n  }\n\n  public getAllLandConfigs(): LandConfig[] {\n    return Array.from(this.landConfigs.values());\n  }\n}\n"]}