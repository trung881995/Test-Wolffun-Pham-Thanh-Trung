{"version":3,"sources":["assets/scripts/storage/Storage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { CattleType } from \"../../enums/CattleType\";\nimport { PlantType } from \"../../enums/PlantType\";\nimport { ILand } from \"../../interfaces/ILand\";\nimport { IMachine } from \"../../interfaces/IMachine\";\nimport { IStorage } from \"../../interfaces/IStorage\";\nimport { IWorker } from \"../../interfaces/IWorker\";\nimport { IYield } from \"../../interfaces/IYield\";\nimport { IAsset } from \"../../interfaces/IAsset\";\nimport LandUI, { LandState, WorkerAction } from \"../ui/LandUI\";\nimport UIManager from \"../Manager/UIManager\";\n\nexport class TomatoSeed implements IAsset {\n  name: string;\n  number: number;\n  harvestInterval: number;\n  maxHarvest: number;\n  buyPrice: any;\n  useForFarm(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class BlueberrySeed implements IAsset {\n  name: string;\n  number: number;\n  harvestInterval: number;\n  maxHarvest: number;\n  buyPrice: any;\n  useForFarm(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class StrawberrySeed implements IAsset {\n  name: string;\n  number: number;\n  harvestInterval: number;\n  maxHarvest: number;\n  buyPrice: any;\n  useForFarm(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class MilkCow implements IAsset {\n  name: string;\n  number: number;\n  harvestInterval: number;\n  maxHarvest: number;\n  buyPrice: any;\n  useForFarm(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class Cow implements IAsset {\n  name: string;\n  number: number;\n  harvestInterval: number;\n  maxHarvest: number;\n  buyPrice: any;\n  useForFarm(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport class Tomato implements IYield {\n  name: string;\n  number: number;\n  sellPrice: number;\n  sellForStore(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class Blueberry implements IYield {\n  name: string;\n  number: number;\n  sellPrice: number;\n  sellForStore(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class Strawberry implements IYield {\n  name: string;\n  number: number;\n  sellPrice: number;\n  sellForStore(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class Milk implements IYield {\n  name: string;\n  number: number;\n  sellPrice: number;\n  sellForStore(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\nexport class Beef implements IYield {\n  name: string;\n  number: number;\n  sellPrice: number;\n  sellForStore(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport class Worker implements IWorker {\n  name: string;\n  number: number;\n  workingInterval: number;\n  buyPrice: number;\n  Work(landUI: LandUI, workerAction: WorkerAction) {\n    switch (workerAction) {\n      case WorkerAction.Yielding:\n        landUI.onClickYieldBtn();\n        break;\n      case WorkerAction.TomatoPlant:\n        landUI.onClickTomatoSeedBtn();\n        console.log(\"worker CLick tomatoseedbtn\");\n        break;\n      case WorkerAction.BlueberryPlant:\n        landUI.onClickBlueberrySeedBtn();\n        break;\n      case WorkerAction.StrawberryPlant:\n        landUI.onClickStrawberrySeedBtn();\n        break;\n      case WorkerAction.MilkcowLiveStock:\n        landUI.onClickMilkCowBtn();\n        break;\n      case WorkerAction.CowLiveStock:\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Machine implements IMachine {\n  name: string;\n  level: number;\n  support: number;\n  upgradePrice: number;\n  Operate(): number {\n    return (this.support * (this.level - 1) + 100) / 100;\n  }\n  upgradePerformace() {\n    this.support += 10;\n  }\n}\nexport class Land implements ILand {\n  constructor(\n    workerAction: WorkerAction,\n    crop: number,\n    containYield: number,\n    name: string,\n    number: number,\n    missionNumber: number,\n    containInterval: number,\n    buyPrice: number,\n\n    isEmpty: boolean = true,\n    time: number,\n    landState: LandState = LandState.Empty,\n    plantType: PlantType = null,\n    cattleType: CattleType = null,\n\n    currentAsset: any,\n\n    workingTime: number,\n\n    isReadyToWork: boolean\n  ) {\n    this.workerAction = workerAction;\n    this.crop = crop;\n    this.containYield = containYield;\n    this.name = name;\n    this.number = number;\n    this.missionNumber = missionNumber;\n    this.containInterval = containInterval;\n    this.buyPrice = buyPrice;\n    this.isEmpty = isEmpty;\n    this.time = time;\n    this.landState = landState;\n    this.plantType = plantType;\n    this.cattleType = cattleType;\n    this.currentAsset = currentAsset;\n    this.workingTime = workingTime;\n    this.isReadyToWork = isReadyToWork;\n  }\n\n  workerAction: WorkerAction;\n  crop: number;\n  containYield: number;\n  name: string;\n  number: number;\n  missionNumber: number;\n  containInterval: number;\n  buyPrice: number;\n\n  isEmpty: boolean = true;\n  time: number;\n  landState: LandState = LandState.Empty;\n  plantType: PlantType = null;\n  cattleType: CattleType = null;\n\n  currentAsset: any;\n\n  workingTime: number;\n\n  isReadyToWork: boolean;\n\n  clone(): Land {\n    return new Land(\n      this.workerAction,\n      this.crop,\n      this.containYield,\n      this.name,\n      this.missionNumber,\n      this.containInterval,\n      this.buyPrice,\n      this.number,\n      this.isEmpty,\n      this.time,\n      this.landState,\n      this.plantType,\n      this.cattleType,\n      this.currentAsset,\n      this.workingTime,\n      this.isReadyToWork\n    );\n  }\n}\n\nexport class Storage implements IStorage {\n  worker: Worker;\n\n  machine: Machine;\n  land: Land;\n\n  gold: number;\n  tomato: Tomato;\n  blueberry: Blueberry;\n  strawberry: Strawberry;\n  milk: Milk;\n  beef: Beef;\n  tomatoSeed: TomatoSeed;\n  blueberrySeed: BlueberrySeed;\n  strawberrySeed: StrawberrySeed;\n  milkCow: MilkCow;\n  cow: Cow;\n\n  workingWorkerNumber: number;\n  getIdleWorker() {\n    return this.worker.number - this.workingWorkerNumber;\n  }\n  getWorkingWorker() {\n    return this.workingWorkerNumber;\n  }\n\n  public sellTomato(): void {\n    this.addGold(this.tomato.number * this.tomato.sellPrice);\n    this.tomato.number = 0;\n  }\n  public sellBlueberry(): void {\n    this.addGold(this.blueberry.number * this.blueberry.sellPrice);\n    this.blueberry.number = 0;\n  }\n  public sellStrawberry(): void {\n    this.addGold(this.strawberry.number * this.strawberry.sellPrice);\n    this.strawberry.number = 0;\n  }\n  public sellMilk(): void {\n    this.addGold(this.milk.number * this.milk.sellPrice);\n    this.milk.number = 0;\n  }\n  public sellBeef(): void {\n    this.addGold(this.beef.number * this.beef.sellPrice);\n    this.beef.number = 0;\n  }\n  public addGold(_gold: number): void {\n    this.gold += _gold;\n  }\n  getWorkerIdle(workingWorkerNumber: number) {\n    let idleWorker = this.worker.number - workingWorkerNumber;\n    return idleWorker;\n  }\n  public getPerformaceMachine(): number {\n    return this.machine.support;\n  }\n\n  public addTomatoSeed(): void {\n    this.tomatoSeed.number += 1;\n  }\n  addBlueberrySeed(): void {\n    this.blueberrySeed.number += 1;\n  }\n  addStrawberrySeed(): void {\n    this.strawberrySeed.number += 10;\n  }\n  addMilkCow(): void {\n    this.milkCow.number += 1;\n  }\n  addCow(): void {\n    this.cow.number += 1;\n  }\n  addWorker(): void {\n    this.worker.number += 1;\n  }\n  upgradeMachine(): void {\n    this.machine.level += 1;\n    this.machine.upgradePerformace();\n    for (let i = 0; i < this.land.number; i++) {\n      let maxHarvest =\n        UIManager.instance.landUIArray[i].land.currentAsset.maxHarvest;\n      UIManager.instance.landUIArray[i].land.crop =\n        UIManager.instance.landUIArray[i].land.currentAsset.maxHarvest;\n      UIManager.instance.landUIArray[i].land.crop +=\n        Math.ceil(maxHarvest * this.machine.Operate()) - maxHarvest;\n    }\n  }\n  addLand(): void {\n    this.land.number += 1;\n  }\n\n  public addTomato(tomatoNumber: number): void {\n    this.tomato.number += tomatoNumber;\n  }\n  addBlueberry(blueberryNumber: number): void {\n    this.blueberry.number += blueberryNumber;\n  }\n  addStrawberry(strawberryNumber: number): void {\n    this.strawberry.number += strawberryNumber;\n  }\n  addMilk(milkNumber: number): void {\n    this.milk.number += milkNumber;\n  }\n  addBeef(beefNumber: number): void {\n    this.beef.number += beefNumber;\n  }\n  assignWorker(landUi: LandUI) {\n    if (landUi.land.containYield > 0) {\n      landUi.land.workerAction = WorkerAction.Yielding;\n      return;\n    }\n    switch (landUi.land.currentAsset) {\n      case UIManager.instance.gameController.model.storage.tomatoSeed:\n        landUi.land.workerAction = WorkerAction.TomatoPlant;\n        break;\n      case UIManager.instance.gameController.model.storage.blueberrySeed:\n        landUi.land.workerAction = WorkerAction.BlueberryPlant;\n        break;\n      case UIManager.instance.gameController.model.storage.strawberrySeed:\n        landUi.land.workerAction = WorkerAction.StrawberryPlant;\n        break;\n      case UIManager.instance.gameController.model.storage.milkCow:\n        landUi.land.workerAction = WorkerAction.MilkcowLiveStock;\n        break;\n      case UIManager.instance.gameController.model.storage.cow:\n        landUi.land.workerAction = WorkerAction.CowLiveStock;\n        break;\n      default:\n        break;\n    }\n  }\n}\n"]}