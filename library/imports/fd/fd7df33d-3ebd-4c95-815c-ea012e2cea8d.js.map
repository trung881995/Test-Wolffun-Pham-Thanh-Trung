{"version":3,"sources":["assets/scripts/Manager/UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\nimport { GameController } from \"../controllers/GameController\";\nimport { GameModel } from \"../models/GameModel\";\nimport { Land } from \"../storage/Storage\";\nimport LandUI, { LandState } from \"../ui/LandUI\";\nimport StorageUI from \"../ui/StorageUI\";\nimport StoreUI from \"../ui/StoreUI\";\nimport { GameView } from \"../views/GameView\";\nimport { GameSaveManager } from \"./GameSaveManager\";\n\n@ccclass\nexport default class UIManager extends cc.Component {\n  @property(LandUI) landUIArray: LandUI[] = [];\n  @property(StoreUI) storeUI: StoreUI = null;\n  @property(StorageUI) storageUI: StorageUI = null;\n\n  @property(cc.Sprite) GamePanel: cc.Sprite = null;\n  public static instance: UIManager;\n\n  gameController: GameController;\n  gameModel: GameModel;\n  gameView: GameView;\n\n  landArrayClones: Land[] = [];\n  time: number = 0;\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    if (UIManager.instance == null) {\n      UIManager.instance = this;\n    }\n  }\n\n  start() {}\n\n  update(dt: number): void {\n    /*  if (this.time > 0) {\n      this.time -= dt;\n    } else if (this.time < 0) {\n      this.useWorkerForQueue3();\n      this.time = 0;\n    } else {\n    }\n    */\n    //if (this.gameController.model.storage);\n  }\n  async setupUI() {\n    await this.gameController.model.setData();\n    this.gameController.model.newLand();\n\n    this.createLand();\n\n    this.useWorkerForQueue3();\n    this.storageUI.setupUI();\n    this.storageUI.updateUI();\n\n    this.storeUI.setupUI();\n  }\n  useWorkerForQueue() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (\n        this.gameController.model.storage.getWorkerIdle(\n          this.gameController.model.storage.workingWorkerNumber\n        ) > 0\n      ) {\n        if (this.gameController.model.queueLandArray.length > 0) {\n          this.useWorker(this.gameController.model.queueLandArray[0]);\n          this.gameController.model.queueLandArray.splice(0, 1);\n        } else {\n          if (this.landUIArray[i].land.isReadyToWork) {\n            this.useWorker(this.landUIArray[i]);\n          }\n        }\n      } else {\n        if (this.landUIArray[i].land.isReadyToWork) {\n          this.gameController.model.queueLandArray.push(this.landUIArray[i]);\n        }\n      }\n    }\n  }\n\n  useWorkerForQueue2() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (\n        this.gameController.model.storage.getWorkerIdle(\n          this.gameController.model.storage.workingWorkerNumber\n        ) > 0\n      ) {\n        if (this.landUIArray[i].land.isReadyToWork) {\n          this.useWorker(this.landUIArray[i]);\n        }\n      } else {\n        this.time = this.checkMinWorkingTime();\n      }\n    }\n  }\n  pushToQueue(landUI: LandUI) {\n    if (\n      landUI.land.isReadyToWork &&\n      !this.gameController.model.queueLandArray.includes(landUI)\n    ) {\n      this.gameController.model.queueLandArray.push(landUI);\n    }\n  }\n  useWorkerForQueue3() {\n    let idleWorker = this.gameController.model.storage.getWorkerIdle(\n      this.gameController.model.storage.workingWorkerNumber\n    );\n    if (idleWorker > 0) {\n      for (let i = 0; i < idleWorker; i++) {\n        if (this.gameController.model.queueLandArray.length > 0) {\n          if (this.gameController.model.queueLandArray[0].land.isReadyToWork) {\n            this.useWorker(this.gameController.model.queueLandArray[0]);\n          } else {\n            console.log(\"thua\");\n            //this.gameController.model.queueLandArray[0].disableWorker();\n          }\n          //this.gameController.model.queueLandArray[0].land.isReadyToWork = false;\n          this.gameController.model.queueLandArray.splice(0, 1);\n        }\n      }\n    } else {\n      //this.time = this.checkMinWorkingTime();\n    }\n  }\n\n  checkMinWorkingTime(): number {\n    let min: number = this.landUIArray[0].land.workingTime;\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (this.landUIArray[i].land.workingTime < min) {\n        min = this.landUIArray[i].land.workingTime;\n      }\n    }\n    return min;\n  }\n\n  useWorker(landUi: LandUI) {\n    this.gameController.model.storage.assignWorker(landUi);\n    this.gameController.model.storage.workingWorkerNumber += 1;\n    landUi.land.workingTime =\n      this.gameController.model.storage.worker.workingInterval * 10;\n    landUi.land.isReadyToWork = false;\n    landUi.enableWorker();\n  }\n  createLand() {\n    /*this.landArrayClones = Array.from({ length: 9 }, () => ({\n      ...this.gameController.model.storage.land,\n    }));*/\n    this.landArrayClones = Array.from({ length: 9 }, () =>\n      this.gameController.model.storage.land.clone()\n    );\n    cc.log(this.landArrayClones);\n    for (let i = 0; i < this.gameController.model.storage.land.number; i++) {\n      this.updateLand(i);\n      this.gameController.model.queueLandArray.push(this.landUIArray[i]);\n    }\n  }\n  updateLand(index: number) {\n    this.landUIArray[index].land = this.landArrayClones[index];\n    this.landUIArray[index].enabled = true;\n    this.landUIArray[index].setupLandState();\n    this.landUIArray[index].enableLand();\n  }\n  enableAllLand() {\n    for (let i = 0; i < this.gameController.model.storage.land.number; i++) {\n      this.landUIArray[i].enableLand();\n    }\n  }\n  findLandForPlant() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (this.landUIArray[i].enabled) {\n        if (\n          this.landUIArray[i].land.currentAsset.number > 0 &&\n          this.landUIArray[i].land.isReadyToWork\n        ) {\n          //this.landUIArray[i].setupLandState();\n          this.pushToQueue(this.landUIArray[i]);\n\n          this.useWorkerForQueue3();\n        }\n      }\n    }\n  }\n\n  clearCache() {\n    GameSaveManager.clear();\n  }\n  startGame() {\n    //this.gameController.loadGame();\n\n    this.gameController = new GameController();\n    this.gameModel = new GameModel();\n    this.gameView = new GameView(this.gameController);\n\n    this.gameController.init(this.gameModel, this.gameView);\n    this.gameController.setupUI();\n    this.setupUI();\n\n    this.GamePanel.node.active = false;\n  }\n}\n"]}