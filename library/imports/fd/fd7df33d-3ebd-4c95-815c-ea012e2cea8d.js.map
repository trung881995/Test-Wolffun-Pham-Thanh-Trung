{"version":3,"sources":["assets/scripts/Manager/UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\nimport { GameController } from \"../controllers/GameController\";\nimport { GameModel } from \"../models/GameModel\";\nimport { Land } from \"../storage/Storage\";\nimport LandUI, { LandState } from \"../ui/LandUI\";\nimport StorageUI from \"../ui/StorageUI\";\nimport StoreUI from \"../ui/StoreUI\";\nimport { GameView } from \"../views/GameView\";\nimport { GameSaveManager } from \"./GameSaveManager\";\n\n@ccclass\nexport default class UIManager extends cc.Component {\n  @property(LandUI) landUIArray: LandUI[] = [];\n  @property(StoreUI) storeUI: StoreUI = null;\n  @property(StorageUI) storageUI: StorageUI = null;\n  @property(cc.Button) StartBtn: cc.Button = null;\n\n  public static instance: UIManager;\n\n  gameController: GameController;\n  gameModel: GameModel;\n  gameView: GameView;\n\n  time: number = 0;\n  saveTime: number = 1;\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    if (UIManager.instance == null) {\n      UIManager.instance = this;\n    }\n\n    this.Init();\n  }\n\n  start() {\n    //this.Save();\n  }\n\n  update(dt: number): void {\n    /*  if (this.time > 0) {\n      this.time -= dt;\n    } else if (this.time < 0) {\n      this.useWorkerForQueue3();\n      this.time = 0;\n    } else {\n    }\n    */\n    if (\n      this.gameController.model.storage &&\n      this.gameModel.landArray.length == 9\n    ) {\n    }\n    this.saveTime -= dt;\n    if (this.saveTime < 0) {\n      this.saveTime = 1;\n      //this.Save();\n    }\n  }\n  async Init() {\n    await this.setup();\n  }\n  async setup() {\n    this.gameController = new GameController();\n    this.gameModel = new GameModel();\n    this.gameView = new GameView(this.gameController);\n\n    this.gameController.init(this.gameModel, this.gameView);\n\n    await this.setupData();\n    this.gameController.model.newLand();\n    this.createLandData();\n    this.gameController.loadGame();\n    this.setupUI();\n    this.gameController.setup();\n    this.StartBtn.interactable = true;\n  }\n  async setupData() {\n    await this.gameModel.setData();\n  }\n  setupUI() {\n    this.createLandUI();\n    this.storageUI.setupUI();\n    this.storageUI.updateUI();\n\n    this.storeUI.setupUI();\n    //this.schedule(this.Save, 1);\n  }\n\n  pushToQueue(index: number) {\n    if (\n      this.gameModel.landArray[index].isReadyToWork &&\n      !this.gameModel.queueIndexArray.includes(index)\n    ) {\n      this.gameModel.queueIndexArray.push(index);\n    }\n  }\n  useWorkerForQueue3() {\n    console.log(\"queueIndex: \" + this.gameModel.queueIndexArray);\n    let idleWorker = this.gameController.model.storage.getWorkerIdle(\n      this.gameController.model.storage.workingWorkerNumber\n    );\n    if (idleWorker > 0) {\n      for (let i = 0; i < idleWorker; i++) {\n        if (this.gameController.model.queueIndexArray.length > 0) {\n          if (\n            this.gameModel.landArray[this.gameModel.queueIndexArray[0]]\n              .isReadyToWork\n          ) {\n            UIManager.instance.landUIArray[\n              this.gameModel.queueIndexArray[0]\n            ].enableWorker();\n            this.useWorker(\n              this.gameModel.landArray[this.gameModel.queueIndexArray[0]]\n            );\n            UIManager.instance.landUIArray[\n              this.gameModel.queueIndexArray[0]\n            ].updateUI();\n          } else {\n            //console.log(\"thua\");\n            //this.gameController.model.queueLandArray[0].disableWorker();\n          }\n          //this.gameController.model.queueLandArray[0].land.isReadyToWork = false;\n          this.gameModel.queueIndexArray.splice(0, 1);\n        }\n      }\n    } else {\n      //this.time = this.checkMinWorkingTime();\n    }\n  }\n\n  checkMinWorkingTime(): number {\n    let min: number = this.gameModel.landArray[0].workingTime;\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (this.gameModel.landArray[i].workingTime < min) {\n        min = this.gameModel.landArray[i].workingTime;\n      }\n    }\n    return min;\n  }\n\n  useWorker(land: Land) {\n    this.gameController.model.storage.assignWorker(land);\n    this.gameController.model.storage.workingWorkerNumber += 1;\n    land.workingTime =\n      this.gameController.model.storage.worker.workingInterval * 10;\n    land.isReadyToWork = false;\n\n    UIManager.instance.storageUI.updateUI();\n  }\n  createLandUI() {\n    for (let i = 0; i < this.gameModel.storage.land.number; i++) {\n      this.updateLandUI(i);\n\n      if (this.gameModel.landArray[i].isReadyToWork) {\n        this.pushToQueue(i);\n        this.useWorkerForQueue3();\n      } else {\n        if (this.gameModel.landArray[i].workingTime > 0) {\n          this.landUIArray[i].enableWorker();\n        }\n      }\n    }\n  }\n  createLandData() {\n    /*this.landArrayClones = Array.from({ length: 9 }, () => ({\n      ...this.gameController.model.storage.land,\n    }));*/\n    if (this.gameModel.landArray.length == 0) {\n      this.gameModel.landArray = Array.from({ length: 9 }, () =>\n        this.gameModel.storage.land.clone()\n      );\n    }\n    cc.log(this.gameModel.landArray);\n  }\n  updateLandUI(index: number) {\n    //UIManager.instance.landUIArray[index] = this.landUIArray[index];\n    this.landUIArray[index].enabled = true;\n    this.landUIArray[index].index = index;\n\n    //this.landUIArray[index].setupLandState();\n    this.landUIArray[index].enableLand();\n    //this.landUIArray[index].updateUI();\n  }\n  enableAllLand() {\n    for (let i = 0; i < this.gameModel.storage.land.number; i++) {\n      this.landUIArray[i].enableLand();\n    }\n  }\n  findLandForPlant() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (this.landUIArray[i].enabled) {\n        if (\n          this.gameModel.landArray[i].currentAsset.number > 0 &&\n          this.gameModel.landArray[i].isReadyToWork\n        ) {\n          //this.landUIArray[i].setupLandState();\n          this.pushToQueue(i);\n\n          this.useWorkerForQueue3();\n        }\n      }\n    }\n  }\n\n  Save() {\n    //GameSaveManager.clear();\n    this.gameController.saveGame();\n  }\n\n  clearCache() {\n    GameSaveManager.clear();\n  }\n}\n"]}