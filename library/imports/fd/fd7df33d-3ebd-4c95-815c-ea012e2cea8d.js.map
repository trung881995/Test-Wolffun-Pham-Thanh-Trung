{"version":3,"sources":["assets/scripts/Manager/UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\nimport { GameController } from \"../controllers/GameController\";\nimport { Land } from \"../storage/Storage\";\nimport LandUI from \"../ui/LandUI\";\nimport StorageUI from \"../ui/StorageUI\";\nimport StoreUI from \"../ui/StoreUI\";\n\n@ccclass\nexport default class UIManager extends cc.Component {\n  @property(LandUI) landUIArray: LandUI[] = [];\n  @property(StoreUI) storeUI: StoreUI = null;\n  @property(StorageUI) storageUI: StorageUI = null;\n  public static instance: UIManager;\n  public gameController: GameController;\n\n  time: number = 0;\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    if (UIManager.instance == null) {\n      UIManager.instance = this;\n    }\n\n    this.gameController = new GameController();\n  }\n\n  start() {\n    this.setupUI();\n  }\n\n  update(dt: number): void {\n    if (this.time > 0) {\n      this.time -= dt;\n    } else if (this.time < 0) {\n      this.useWorkerForQueue2();\n      this.time = 0;\n    } else {\n    }\n  }\n  async setupUI() {\n    await this.gameController.model.setData();\n    const clones = Array.from({ length: 5 }, () => ({\n      ...this.gameController.model.storage.land,\n    }));\n\n    for (let i = 0; i < this.gameController.model.storage.land.number; i++) {\n      this.landUIArray[i].land = clones[i];\n      this.landUIArray[i].enabled = true;\n      this.landUIArray[i].DisplayUI();\n      //this.landUIArray[i].resetUI();\n      // this.landUIArray[i].disableWorker();\n      // this.landUIArray[i].setupUI();\n    }\n    this.gameController.model.queueLandArray.push(this.landUIArray[0]);\n    this.useWorkerForQueue2();\n    this.storageUI.setupUI();\n    this.storageUI.updateUI();\n\n    this.storeUI.setupUI();\n  }\n  useWorkerForQueue() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (\n        this.gameController.model.storage.getWorkerIdle(\n          this.gameController.model.storage.workingWorkerNumber\n        ) > 0\n      ) {\n        if (this.gameController.model.queueLandArray.length > 0) {\n          this.useWorker(this.gameController.model.queueLandArray[0]);\n          this.gameController.model.queueLandArray.splice(0, 1);\n        } else {\n          if (this.landUIArray[i].land.isReadyToWork) {\n            this.useWorker(this.landUIArray[i]);\n          }\n        }\n      } else {\n        if (this.landUIArray[i].land.isReadyToWork) {\n          this.gameController.model.queueLandArray.push(this.landUIArray[i]);\n        }\n      }\n    }\n  }\n\n  useWorkerForQueue2() {\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (\n        this.gameController.model.storage.getWorkerIdle(\n          this.gameController.model.storage.workingWorkerNumber\n        ) > 0\n      ) {\n        if (this.landUIArray[i].land.isReadyToWork) {\n          this.useWorker(this.landUIArray[i]);\n        }\n      } else {\n        this.time = this.checkMinWorkingTime();\n      }\n    }\n  }\n\n  checkMinWorkingTime(): number {\n    let min: number = this.landUIArray[0].land.workingTime;\n    for (let i = 0; i < this.landUIArray.length; i++) {\n      if (this.landUIArray[i].land.workingTime < min) {\n        min = this.landUIArray[i].land.workingTime;\n      }\n    }\n    return min;\n  }\n\n  useWorker(landUi: LandUI) {\n    this.gameController.model.storage.assignWorker(landUi);\n    this.gameController.model.storage.workingWorkerNumber += 1;\n    landUi.land.workingTime =\n      this.gameController.model.storage.worker.workingInterval * 10;\n    landUi.land.isReadyToWork = false;\n  }\n  createLand() {\n    for (let i = 0; i < this.gameController.model.storage.land.number; i++) {\n      this.landUIArray[i].enableLand();\n    }\n  }\n}\n"]}