{"version":3,"sources":["assets/scripts/ui/LandUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport { CattleType } from \"../../enums/CattleType\";\nimport { PlantType } from \"../../enums/PlantType\";\nimport UIManager from \"../Manager/UIManager\";\nimport {\n  CattleConfigs,\n  FirstConfigs,\n  LandConfigs,\n  PlantConfigs,\n} from \"../data/GameConfig\";\nimport { Land, TomatoSeed } from \"../storage/Storage\";\n\nconst { ccclass, property } = cc._decorator;\nexport enum LandState {\n  Undefined,\n  Empty,\n  Plant,\n  Cattle,\n  Harvest,\n}\nexport enum YeildAction {\n  Undefined = \"\",\n  Harvest = \"Harvest\",\n  Milk = \"Milk\",\n  Butcher = \"Butcher\",\n}\nexport enum WorkerAction {\n  Undefined,\n  Yielding,\n  TomatoPlant,\n  BlueberryPlant,\n  StrawberryPlant,\n  MilkcowLiveStock,\n  CowLiveStock,\n}\n@ccclass\nexport default class LandUI extends cc.Component {\n  @property(cc.Button)\n  tomatoSeedBtn: cc.Button = null;\n  @property(cc.Button)\n  blueberrySeedBtn: cc.Button = null;\n  @property(cc.Button)\n  strawberrySeedBtn: cc.Button = null;\n  @property(cc.Button)\n  milkCowBtn: cc.Button = null;\n\n  @property(cc.Button)\n  yieldBtn: cc.Button = null;\n\n  @property(cc.Label)\n  nameLb: cc.Label = null;\n  @property(cc.Label)\n  timeLb: cc.Label = null;\n  @property(cc.Label)\n  yieldContainLb: cc.Label = null;\n  @property(cc.Label)\n  cropLb: cc.Label = null;\n\n  @property(cc.Label)\n  yieldButtonLb: cc.Label = null;\n\n  @property(cc.Sprite)\n  workerSprite: cc.Sprite = null;\n  @property(cc.Label)\n  workingIntervalLb: cc.Label = null;\n\n  @property(cc.Sprite)\n  Sprite: cc.Sprite = null;\n\n  index: number;\n  //land: Land;\n  // LIFE-CYCLE CALLBACKS:\n  onLoad() {}\n\n  start() {\n    this.setupUI();\n  }\n\n  update(dt) {\n    if (UIManager.instance.gameModel.landArray[this.index]) {\n      if (!UIManager.instance.gameModel.landArray[this.index].isEmpty) {\n        if (UIManager.instance.gameModel.landArray[this.index].time < -0.5) {\n          if (UIManager.instance.gameModel.landArray[this.index].crop > 0) {\n            this.addYield();\n          } else {\n            this.switchToEmptyLand();\n          }\n        } else if (\n          UIManager.instance.gameModel.landArray[this.index].time > -0.5\n        ) {\n          let duration =\n            dt * UIManager.instance.gameModel.storage.machine.Operate();\n          this.changeLandTime(duration);\n          this.updateUI();\n          console.log(\"change Time!!!!!\");\n        }\n      }\n\n      if (UIManager.instance.gameModel.landArray[this.index].workingTime > 0) {\n        UIManager.instance.gameModel.landArray[this.index].workingTime -= dt;\n        this.updateUI();\n      } else if (\n        UIManager.instance.gameModel.landArray[this.index].workingTime < 0\n      ) {\n        UIManager.instance.gameModel.storage.worker.Work(\n          this,\n          UIManager.instance.gameModel.landArray[this.index].workerAction\n        );\n      } else {\n      }\n    }\n  }\n  public setupLandState() {\n    switch (UIManager.instance.gameModel.landArray[this.index].landState) {\n      case LandState.Empty:\n        this.resetUI();\n        //this.setupUI();\n        //this.disableWorker();\n        UIManager.instance.gameModel.landArray[this.index].isReadyToWork =\n          UIManager.instance.gameModel.landArray[this.index].currentAsset\n            .number > 0;\n        break;\n      case LandState.Harvest:\n        this.updateUI();\n        //this.disableWorker();\n        UIManager.instance.gameModel.landArray[this.index].isReadyToWork = true;\n        break;\n      case LandState.Plant:\n        this.updateUI();\n        UIManager.instance.gameModel.landArray[this.index].isReadyToWork =\n          false;\n        //this.disableWorker();\n        break;\n      case LandState.Cattle:\n        this.updateUI();\n        UIManager.instance.gameModel.landArray[this.index].isReadyToWork =\n          false;\n        //this.disableWorker();\n        break;\n      default:\n        break;\n    }\n  }\n  public setupUI() {\n    this.tomatoSeedBtn.node.active = true;\n    this.tomatoSeedBtn.node.on(\n      cc.Node.EventType.TOUCH_END,\n      this.onClickTomatoSeedBtn,\n      this\n    );\n    this.blueberrySeedBtn.node.active = true;\n    this.blueberrySeedBtn.node.on(\n      cc.Node.EventType.TOUCH_END,\n      this.onClickBlueberrySeedBtn,\n      this\n    );\n    this.strawberrySeedBtn.node.active = true;\n    this.strawberrySeedBtn.node.on(\n      cc.Node.EventType.TOUCH_END,\n      this.onClickStrawberrySeedBtn,\n      this\n    );\n    this.milkCowBtn.node.active = true;\n    this.milkCowBtn.node.on(\n      cc.Node.EventType.TOUCH_END,\n      this.onClickMilkCowBtn,\n      this\n    );\n    //this.harvestBtn.node.active = true;\n    this.yieldBtn.node.on(\n      cc.Node.EventType.TOUCH_END,\n      this.onClickYieldBtn,\n      this\n    );\n\n    console.log(\"setup LandUI Done!!!!\");\n  }\n  public updateUI() {\n    this.setTimeLb(UIManager.instance.gameModel.landArray[this.index].time);\n    this.setCropLb(UIManager.instance.gameModel.landArray[this.index].crop);\n    this.setWorkingIntervalLb(\n      UIManager.instance.gameModel.landArray[this.index].workingTime\n    );\n    this.setYieldContainLb(\n      UIManager.instance.gameModel.landArray[this.index].containYield\n    );\n    if (UIManager.instance.gameModel.landArray[this.index].time > 0) {\n      this.setSprite(\n        UIManager.instance.gameModel.landArray[this.index].currentAsset.name\n      );\n      this.setNameLb(\n        UIManager.instance.gameModel.landArray[this.index].currentAsset.name\n      );\n\n      this.tomatoSeedBtn.node.active = false;\n      this.blueberrySeedBtn.node.active = false;\n      this.strawberrySeedBtn.node.active = false;\n      this.milkCowBtn.node.active = false;\n\n      this.nameLb.node.active = true;\n      this.timeLb.node.active = true;\n      this.Sprite.node.active = true;\n      this.yieldContainLb.node.active = true;\n      this.cropLb.node.active = true;\n    } else {\n    }\n\n    this.yieldBtn.node.active =\n      (UIManager.instance.gameModel.landArray[this.index].plantType != null ||\n        UIManager.instance.gameModel.landArray[this.index].cattleType !=\n          null) &&\n      UIManager.instance.gameModel.landArray[this.index].containYield > 0;\n    if (this.yieldBtn.node.active) {\n      switch (UIManager.instance.gameModel.landArray[this.index].currentAsset) {\n        case UIManager.instance.gameController.model.storage.tomatoSeed:\n          this.yieldButtonLb.string = YeildAction.Harvest;\n          break;\n        case UIManager.instance.gameController.model.storage.blueberrySeed:\n          this.yieldButtonLb.string = YeildAction.Harvest;\n          break;\n        case UIManager.instance.gameController.model.storage.strawberrySeed:\n          this.yieldButtonLb.string = YeildAction.Harvest;\n          break;\n        case UIManager.instance.gameController.model.storage.milkCow:\n          this.yieldButtonLb.string = YeildAction.Milk;\n          break;\n        case UIManager.instance.gameController.model.storage.cow:\n          this.yieldButtonLb.string = YeildAction.Butcher;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  onClickTomatoSeedBtn() {\n    if (UIManager.instance.gameController.model.storage.tomatoSeed.number > 0) {\n      //this.disableWorker();\n      UIManager.instance.gameModel.landArray[this.index].isEmpty = false;\n      UIManager.instance.gameModel.landArray[this.index].plantType =\n        PlantType.tomatoSeed;\n      UIManager.instance.gameModel.landArray[this.index].time =\n        PlantConfigs.tomatoseed.harvestInterval * 60;\n      UIManager.instance.gameModel.landArray[this.index].currentAsset =\n        UIManager.instance.gameController.model.storage.tomatoSeed;\n\n      let maxHarvest =\n        UIManager.instance.gameModel.landArray[this.index].currentAsset\n          .maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop =\n        UIManager.instance.gameModel.landArray[\n          this.index\n        ].currentAsset.maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop +=\n        Math.ceil(\n          maxHarvest *\n            UIManager.instance.gameController.model.storage.machine.Operate()\n        ) - maxHarvest;\n\n      UIManager.instance.gameController.model.storage.tomatoSeed.number -= 1;\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Plant;\n      this.disableWorker();\n\n      UIManager.instance.storageUI.updateUI();\n      this.updateUI();\n\n      UIManager.instance.enableAllLand();\n      UIManager.instance.useWorkerForQueue3();\n    }\n    //this.disableWorker();\n    this.setupLandState();\n    //UIManager.instance.pushToQueue(this);\n    //UIManager.instance.useWorkerForQueue3();\n  }\n  onClickBlueberrySeedBtn() {\n    if (\n      UIManager.instance.gameController.model.storage.blueberrySeed.number > 0\n    ) {\n      //this.disableWorker();\n      UIManager.instance.gameModel.landArray[this.index].time =\n        PlantConfigs.blueberryseed.harvestInterval * 60;\n      UIManager.instance.gameModel.landArray[this.index].isEmpty = false;\n      UIManager.instance.gameModel.landArray[this.index].plantType =\n        PlantType.blueberrySeed;\n      UIManager.instance.gameModel.landArray[this.index].currentAsset =\n        UIManager.instance.gameController.model.storage.blueberrySeed;\n\n      let maxHarvest =\n        UIManager.instance.gameModel.landArray[this.index].currentAsset\n          .maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop =\n        UIManager.instance.gameModel.landArray[\n          this.index\n        ].currentAsset.maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop +=\n        Math.ceil(\n          maxHarvest *\n            UIManager.instance.gameController.model.storage.machine.Operate()\n        ) - maxHarvest;\n\n      UIManager.instance.gameController.model.storage.blueberrySeed.number -= 1;\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Plant;\n      this.disableWorker();\n      UIManager.instance.storageUI.updateUI();\n      this.updateUI();\n      UIManager.instance.enableAllLand();\n      UIManager.instance.useWorkerForQueue3();\n    }\n    //this.disableWorker();\n    this.setupLandState();\n    //UIManager.instance.pushToQueue(this);\n    //UIManager.instance.useWorkerForQueue3();\n  }\n  onClickStrawberrySeedBtn() {\n    if (\n      UIManager.instance.gameController.model.storage.strawberrySeed.number > 0\n    ) {\n      //this.disableWorker();\n      UIManager.instance.gameModel.landArray[this.index].time =\n        PlantConfigs.strawberryseed.harvestInterval * 60;\n      UIManager.instance.gameModel.landArray[this.index].isEmpty = false;\n      UIManager.instance.gameModel.landArray[this.index].plantType =\n        PlantType.strawberrySeed;\n      UIManager.instance.gameModel.landArray[this.index].currentAsset =\n        UIManager.instance.gameController.model.storage.strawberrySeed;\n      let maxHarvest =\n        UIManager.instance.gameModel.landArray[this.index].currentAsset\n          .maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop =\n        UIManager.instance.gameModel.landArray[\n          this.index\n        ].currentAsset.maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop +=\n        Math.ceil(\n          maxHarvest *\n            UIManager.instance.gameController.model.storage.machine.Operate()\n        ) - maxHarvest;\n      UIManager.instance.gameModel.storage.strawberrySeed.number -= 1;\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Plant;\n      this.disableWorker();\n      UIManager.instance.storageUI.updateUI();\n      this.updateUI();\n      UIManager.instance.enableAllLand();\n      UIManager.instance.useWorkerForQueue3();\n    }\n    //this.disableWorker();\n    this.setupLandState();\n    //UIManager.instance.pushToQueue(this);\n    //UIManager.instance.useWorkerForQueue3();\n  }\n  onClickMilkCowBtn() {\n    if (UIManager.instance.gameController.model.storage.milkCow.number > 0) {\n      //this.disableWorker();\n      UIManager.instance.gameModel.landArray[this.index].time =\n        CattleConfigs.milkcow.harvestInterval * 60;\n      UIManager.instance.gameModel.landArray[this.index].isEmpty = false;\n      UIManager.instance.gameModel.landArray[this.index].cattleType =\n        CattleType.Milkcow;\n      UIManager.instance.gameModel.landArray[this.index].currentAsset =\n        UIManager.instance.gameController.model.storage.milkCow;\n      let maxHarvest =\n        UIManager.instance.gameModel.landArray[this.index].currentAsset\n          .maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop =\n        UIManager.instance.gameModel.landArray[\n          this.index\n        ].currentAsset.maxHarvest;\n      UIManager.instance.gameModel.landArray[this.index].crop +=\n        Math.ceil(\n          maxHarvest *\n            UIManager.instance.gameController.model.storage.machine.Operate()\n        ) - maxHarvest;\n      UIManager.instance.gameController.model.storage.milkCow.number -= 1;\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Cattle;\n      this.disableWorker();\n      UIManager.instance.storageUI.updateUI();\n      this.updateUI();\n      UIManager.instance.enableAllLand();\n      UIManager.instance.useWorkerForQueue3();\n    }\n    //this.disableWorker();\n    this.setupLandState();\n    //UIManager.instance.pushToQueue(this);\n    //UIManager.instance.useWorkerForQueue3();\n  }\n  onClickYieldBtn() {\n    //this.disableWorker();\n    switch (\n      UIManager.instance.gameModel.landArray[this.index].currentAsset.name\n    ) {\n      case UIManager.instance.gameController.model.storage.tomatoSeed.name:\n        UIManager.instance.gameController.model.storage.addTomato(\n          UIManager.instance.gameModel.landArray[this.index].containYield\n        );\n\n        break;\n      case UIManager.instance.gameController.model.storage.blueberrySeed.name:\n        UIManager.instance.gameController.model.storage.addBlueberry(\n          UIManager.instance.gameModel.landArray[this.index].containYield\n        );\n\n        break;\n      case UIManager.instance.gameController.model.storage.strawberrySeed.name:\n        UIManager.instance.gameController.model.storage.addStrawberry(\n          UIManager.instance.gameModel.landArray[this.index].containYield\n        );\n\n        break;\n      case UIManager.instance.gameController.model.storage.milkCow.name:\n        UIManager.instance.gameController.model.storage.addMilk(\n          UIManager.instance.gameModel.landArray[this.index].containYield\n        );\n\n        break;\n      case UIManager.instance.gameController.model.storage.cow.name:\n        UIManager.instance.gameController.model.storage.addBeef(\n          UIManager.instance.gameModel.landArray[this.index].containYield\n        );\n\n        break;\n      default:\n        break;\n    }\n    UIManager.instance.gameModel.landArray[this.index].containYield = 0;\n    //this.updateUI();\n    //UIManager.instance.storageUI.updateUI();\n    UIManager.instance.gameModel.landArray[this.index].landState = UIManager\n      .instance.gameModel.landArray[this.index].plantType\n      ? LandState.Plant\n      : LandState.Cattle;\n    if (UIManager.instance.gameModel.landArray[this.index].crop == 0) {\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Empty;\n      this.disableWorker();\n      this.setupLandState();\n      UIManager.instance.storageUI.updateUI();\n      this.updateUI();\n      UIManager.instance.pushToQueue(this.index);\n      UIManager.instance.useWorkerForQueue3();\n      //UIManager.instance.useWorkerForQueue3();\n      //UIManager.instance.useWorkerForQueue3();\n      return;\n    }\n    this.disableWorker();\n    this.setupLandState();\n    UIManager.instance.storageUI.updateUI();\n    this.updateUI();\n    UIManager.instance.useWorkerForQueue3();\n    //UIManager.instance.pushToQueue(this);\n    //UIManager.instance.useWorkerForQueue3();\n    //this.disableWorker();\n    //UIManager.instance.useWorkerForQueue();\n  }\n  onClickMilkBtn() {\n    this.resetUI();\n  }\n  setNameLb(name: string) {\n    this.nameLb.string = name;\n  }\n  setYieldContainLb(yieldContain: number) {\n    this.yieldContainLb.string = yieldContain.toString();\n  }\n  setCropLb(crop: number) {\n    this.cropLb.string = crop.toString();\n  }\n  setWorkingIntervalLb(workingTime: number) {\n    if (workingTime < 0) {\n      this.workingIntervalLb.string = \"0s\";\n    } else {\n      let _workingTime = parseInt(workingTime.toString());\n      this.workingIntervalLb.string = _workingTime.toString() + \"s\";\n    }\n  }\n  setTimeLb(time: number) {\n    if (time < 0) {\n      this.timeLb.string = \"0s\";\n    } else {\n      let _time = parseInt(time.toString());\n      this.timeLb.string = _time.toString() + \"s\";\n    }\n  }\n\n  setWorkerSprite() {\n    this.loadImage(\"Middle\", this.workerSprite);\n  }\n  setSprite(imageName: string) {\n    this.loadImage(imageName, this.Sprite);\n  }\n\n  loadImage = (imageName: string, sprite: cc.Sprite) => {\n    const path = `images/${imageName}`;\n    if (imageName == \"\") {\n      sprite.spriteFrame = null;\n      return;\n    }\n    cc.resources.load(path, cc.SpriteFrame, (err, spriteFrame) => {\n      if (err) {\n        cc.error(`Không thể load ảnh: ${path}`, err);\n        return;\n      }\n      sprite.spriteFrame = spriteFrame;\n    });\n  };\n  resetUI() {\n    this.tomatoSeedBtn.node.active = true;\n    this.blueberrySeedBtn.node.active = true;\n    this.strawberrySeedBtn.node.active = true;\n    this.milkCowBtn.node.active = true;\n    this.yieldBtn.node.active = false;\n    this.nameLb.string = \"\";\n    this.nameLb.node.active = false;\n    this.yieldContainLb.string = \"\";\n    this.yieldContainLb.node.active = false;\n    this.cropLb.string = \"\";\n    this.cropLb.node.active = false;\n    this.timeLb.string = \"\";\n    this.timeLb.node.active = false;\n    this.workerSprite.node.active = false;\n    this.Sprite.node.active = false;\n    this.workingIntervalLb.string = \"\";\n    this.workingIntervalLb.node.active = false;\n\n    UIManager.instance.gameModel.landArray[this.index].plantType = null;\n    UIManager.instance.gameModel.landArray[this.index].cattleType = null;\n\n    UIManager.instance.gameModel.landArray[this.index].time = 0;\n    UIManager.instance.gameModel.landArray[this.index].isEmpty = true;\n\n    UIManager.instance.gameModel.landArray[this.index].landState =\n      LandState.Empty;\n\n    //this.land.currentAsset = null;\n    UIManager.instance.gameModel.landArray[this.index].workerAction =\n      WorkerAction.TomatoPlant;\n  }\n\n  enableLand() {\n    this.tomatoSeedBtn.interactable =\n      UIManager.instance.gameController.model.storage.tomatoSeed.number > 0;\n    this.blueberrySeedBtn.interactable =\n      UIManager.instance.gameController.model.storage.blueberrySeed.number > 0;\n    this.strawberrySeedBtn.interactable =\n      UIManager.instance.gameController.model.storage.strawberrySeed.number > 0;\n    this.milkCowBtn.interactable =\n      UIManager.instance.gameController.model.storage.milkCow.number > 0;\n  }\n\n  enableWorker() {\n    this.setWorkerSprite();\n    this.workerSprite.node.active = true;\n    this.workingIntervalLb.node.active = true;\n  }\n\n  disableWorker() {\n    if (UIManager.instance.gameModel.landArray[this.index].workingTime != 0) {\n      UIManager.instance.gameModel.landArray[this.index].workingTime = 0;\n      this.workerSprite.node.active = false;\n      UIManager.instance.gameController.model.storage.workingWorkerNumber -= 1;\n      this.workingIntervalLb.node.active = false;\n    }\n  }\n  addYield() {\n    UIManager.instance.gameModel.landArray[this.index].containYield += 1;\n    UIManager.instance.gameModel.landArray[this.index].workerAction =\n      WorkerAction.Yielding;\n    UIManager.instance.gameModel.landArray[this.index].crop -= 1;\n    UIManager.instance.gameModel.landArray[this.index].time =\n      UIManager.instance.gameModel.landArray[this.index].currentAsset\n        .harvestInterval * 60;\n    console.log(\n      UIManager.instance.gameModel.landArray[this.index].currentAsset\n        .harvestInterval\n    );\n    if (\n      UIManager.instance.gameModel.landArray[this.index].landState !=\n      LandState.Harvest\n    ) {\n      UIManager.instance.gameModel.landArray[this.index].landState =\n        LandState.Harvest;\n      this.setupLandState();\n      UIManager.instance.pushToQueue(this.index);\n      UIManager.instance.useWorkerForQueue3();\n    }\n  }\n  switchToEmptyLand() {\n    console.log(\"switch to empty land\");\n    UIManager.instance.gameModel.landArray[this.index].landState =\n      LandState.Empty;\n    this.disableWorker();\n    this.setupLandState();\n    UIManager.instance.storageUI.updateUI();\n    this.updateUI();\n    UIManager.instance.pushToQueue(this.index);\n    UIManager.instance.useWorkerForQueue3();\n    //UIManager.instance.useWorkerForQueue3();\n  }\n  changeLandTime(duration: number) {\n    UIManager.instance.gameModel.landArray[this.index].time -= duration;\n  }\n}\n"]}