{"version":3,"sources":["assets/scripts/controllers/GameController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gEAA+D;AAG/D,8DAaoC;AAGpC;IAAoC,kCAAmC;IAAvE;;IA6KA,CAAC;IA1KC;;;;;;;MAOE;IACF,6BAAI,GAAJ,UAAK,KAAgB,EAAE,IAAc;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,+BAAM,GAAN,UAAO,EAAU;QACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,8BAAK,GAAL;QAAA,iBAOC;QANC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;YAC7B,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;YAChC,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAQ,GAAR;QACE,IAAM,IAAI,GAAa;YACrB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAClC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YAC9C,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE;YACpD,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;YACtD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAExC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YACtC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAExC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YACtC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;YAC5C,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YAC9C,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAElC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;YAE5C,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAElC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE;SAGjE,CAAC;QACF,IAAM,KAAK,GAAkB;YAC3B,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,0BAA0B,EAAE;SACzD,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,IAAM,SAAS,GAAkB;YAC/B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;SACtC,CAAC;QACF,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrD,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACvD,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC5D,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC;IAED,iCAAQ,GAAR;QACE,IAAM,KAAK,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAC1D,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAElD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAEtE,8DAA8D;YAC9D,qDAAqD;YAErD,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;YAClE,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;SAC7C;QAED,IAAM,MAAM,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SAChE;QAED,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QAED,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QAED,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,UAAU,CAAC,CAAC;QACpE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QACD,IAAM,UAAU,GAAG,iCAAe,CAAC,IAAI,CAAC,iCAAe,CAAC,UAAU,CAAC,CAAC;QACpE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjD;QAED,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,iCAAe,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,8CAAqB,GAArB,UAAsB,QAAgB,IAAG,CAAC;IAE1C,sCAAa,GAAb,UAAc,QAAgB,IAAG,CAAC;IAClC,wCAAe,GAAf,UAAgB,QAAgB,IAAG,CAAC;IACtC,qBAAC;AAAD,CA7KA,AA6KC,CA7KmC,+BAAc,GA6KjD;AA7KY,wCAAc","file":"","sourceRoot":"/","sourcesContent":["import { BaseController } from \"../../core/mvc/BaseController\";\nimport { GameView } from \"../views/GameView\";\nimport { GameModel } from \"../models/GameModel\";\nimport {\n  GameSaveManager,\n  SaveData,\n  SaveLand0Data,\n  SaveLand1Data,\n  SaveLand2Data,\n  SaveLand3Data,\n  SaveLand4Data,\n  SaveLand5Data,\n  SaveLand6Data,\n  SaveLand7Data,\n  SaveLand8Data,\n  SaveQueueData,\n} from \"../Manager/GameSaveManager\";\nimport { Milk, MilkCow, TomatoSeed } from \"../storage/Storage\";\n\nexport class GameController extends BaseController<GameModel, GameView> {\n  model: GameModel;\n  view: GameView;\n  /* constructor() {\n    super();\n    this.model = new GameModel();\n\n    this.view = new GameView(this);\n\n  }\n  */\n  init(model: GameModel, view: GameView): void {\n    this.model = model;\n    this.view = view;\n  }\n  update(dt: number): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  setup(): void {\n    cc.game.on(cc.game.EVENT_HIDE, () => {\n      this.saveGame();\n    });\n    cc.game.on(cc.game.EVENT_RESTART, () => {\n      this.saveGame();\n    });\n  }\n  saveGame() {\n    const data: SaveData = {\n      gold: this.model.getSaveGoldData(),\n      tomatoSeed: this.model.getSaveTomatoSeedData(),\n      blueberrySeed: this.model.getSaveBlueberrySeedData(),\n      strawberrySeed: this.model.getSaveStrawberrySeedData(),\n      milkCow: this.model.getSaveMilkCowData(),\n\n      worker: this.model.getSaveWorkerData(),\n      machine: this.model.getSaveMachineData(),\n\n      tomato: this.model.getSaveTomatoData(),\n      blueberry: this.model.getSaveBlueberryData(),\n      strawberry: this.model.getSaveStrawberryData(),\n      milk: this.model.getSaveMilkData(),\n\n      timestamp: this.model.getSaveTimeStampData(),\n\n      land: this.model.getSaveLandData(),\n\n      workingWorkerNumber: this.model.getSaveWorkingWorkerNumberData(),\n\n      //queueLandArray: this.model.getSaveQueueLandArrayData(),\n    };\n    const data2: SaveQueueData = {\n      queueIndexArray: this.model.getSaveQueueIndexArrayData(),\n    };\n    const landData0: SaveLand0Data = {\n      land_0: this.model.getSaveLand0Data(),\n    };\n    const landData1: SaveLand1Data = {\n      land_1: this.model.getSaveLand1Data(),\n    };\n    const landData2: SaveLand2Data = {\n      land_2: this.model.getSaveLand2Data(),\n    };\n    const landData3: SaveLand3Data = {\n      land_3: this.model.getSaveLand3Data(),\n    };\n    const landData4: SaveLand4Data = {\n      land_4: this.model.getSaveLand4Data(),\n    };\n    const landData5: SaveLand5Data = {\n      land_5: this.model.getSaveLand5Data(),\n    };\n    const landData6: SaveLand6Data = {\n      land_6: this.model.getSaveLand6Data(),\n    };\n    const landData7: SaveLand7Data = {\n      land_7: this.model.getSaveLand7Data(),\n    };\n    const landData8: SaveLand8Data = {\n      land_8: this.model.getSaveLand8Data(),\n    };\n    GameSaveManager.save(GameSaveManager.SAVE_KEY, data);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY2, data2);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY3, landData0);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY4, landData1);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY5, landData2);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY6, landData3);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY7, landData4);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY8, landData5);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY9, landData6);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY10, landData7);\n    GameSaveManager.save(GameSaveManager.SAVE_KEY11, landData8);\n    console.log(\"game Saved!!!!!!!!!\");\n  }\n\n  loadGame() {\n    const saved = GameSaveManager.load(GameSaveManager.SAVE_KEY);\n    if (saved) {\n      this.model.loadGoldFromSave(saved.gold);\n      this.model.loadTomatoSeedFromSave(saved.tomatoSeed);\n      this.model.loadBlueberrySeedFromSave(saved.blueberrySeed);\n      this.model.loadStrawberrySeedFromSave(saved.strawberrySeed);\n      this.model.loadMilkCowFromSave(saved.milkCow);\n      this.model.loadWokerFromSave(saved.worker);\n      this.model.loadMachineFromSave(saved.machine);\n      this.model.loadTomatoFromSave(saved.tomato);\n      this.model.loadBlueberryFromSave(saved.blueberry);\n      this.model.loadStrawberryFromSave(saved.strawberry);\n      this.model.loadMilkFromSave(saved.milk);\n      this.model.loadTimeStampFromSave(saved.timestamp);\n\n      this.model.loadLandFromSave(saved.land);\n\n      this.model.loadWorkingWorkerNumberFromSave(saved.workingWorkerNumber);\n\n      //this.model.loadQueueLandArrayFromSave(saved.queueLandArray);\n      // this.model.loadLandArrayFromSave(saved.landArray);\n\n      const offlineDuration = Date.now() - this.model.storage.timestamp;\n      this.updateOfflineProgress(offlineDuration);\n    }\n\n    const saved2 = GameSaveManager.load(GameSaveManager.SAVE_KEY2);\n    if (saved2) {\n      this.model.loadQueueIndexArrayFromSave(saved2.queueIndexArray);\n    }\n\n    const landSaved0 = GameSaveManager.load(GameSaveManager.SAVE_KEY3);\n    if (landSaved0) {\n      this.model.loadLand0FromSave(landSaved0.land_0);\n    }\n\n    const landSaved1 = GameSaveManager.load(GameSaveManager.SAVE_KEY4);\n    if (landSaved1) {\n      this.model.loadLand1FromSave(landSaved1.land_1);\n    }\n\n    const landSaved2 = GameSaveManager.load(GameSaveManager.SAVE_KEY5);\n    if (landSaved2) {\n      this.model.loadLand2FromSave(landSaved2.land_2);\n    }\n    const landSaved3 = GameSaveManager.load(GameSaveManager.SAVE_KEY6);\n    if (landSaved3) {\n      this.model.loadLand3FromSave(landSaved3.land_3);\n    }\n    const landSaved4 = GameSaveManager.load(GameSaveManager.SAVE_KEY7);\n    if (landSaved4) {\n      this.model.loadLand4FromSave(landSaved4.land_4);\n    }\n    const landSaved5 = GameSaveManager.load(GameSaveManager.SAVE_KEY8);\n    if (landSaved5) {\n      this.model.loadLand5FromSave(landSaved5.land_5);\n    }\n    const landSaved6 = GameSaveManager.load(GameSaveManager.SAVE_KEY9);\n    if (landSaved6) {\n      this.model.loadLand6FromSave(landSaved6.land_6);\n    }\n    const landSaved7 = GameSaveManager.load(GameSaveManager.SAVE_KEY10);\n    if (landSaved7) {\n      this.model.loadLand7FromSave(landSaved7.land_7);\n    }\n    const landSaved8 = GameSaveManager.load(GameSaveManager.SAVE_KEY11);\n    if (landSaved8) {\n      this.model.loadLand8FromSave(landSaved8.land_8);\n    }\n\n    console.log(\"game Loaded!!!!!!!!!\");\n    GameSaveManager.clear();\n  }\n\n  updateOfflineProgress(duration: number) {}\n\n  calculateLand(duration: number) {}\n  calculateWorker(duration: number) {}\n}\n"]}