{"version":3,"sources":["assets/scripts/controllers/GameController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gEAA+D;AAG/D,8DAAuE;AAGvE;IAAoC,kCAAmC;IAAvE;;IAyDA,CAAC;IAtDC;;;;;;;MAOE;IACF,6BAAI,GAAJ,UAAK,KAAgB,EAAE,IAAc;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,+BAAM,GAAN,UAAO,EAAU;QACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,gCAAO,GAAP;QAAA,iBAIC;QAHC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;YAC7B,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAQ,GAAR;QACE,IAAM,IAAI,GAAa;YACrB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAClC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YAC9C,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE;YACpD,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;YACtD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAExC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YACtC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAExC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YACtC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;YAC5C,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE;YAC9C,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAElC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;SAC7C,CAAC;QACF,iCAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,iCAAQ,GAAR;QACE,IAAM,KAAK,GAAG,iCAAe,CAAC,IAAI,EAAE,CAAC;QACrC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC7D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEvD,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;SAC7C;IACH,CAAC;IACH,qBAAC;AAAD,CAzDA,AAyDC,CAzDmC,+BAAc,GAyDjD;AAzDY,wCAAc","file":"","sourceRoot":"/","sourcesContent":["import { BaseController } from \"../../core/mvc/BaseController\";\nimport { GameView } from \"../views/GameView\";\nimport { GameModel } from \"../models/GameModel\";\nimport { GameSaveManager, SaveData } from \"../Manager/GameSaveManager\";\nimport { Milk, MilkCow, TomatoSeed } from \"../storage/Storage\";\n\nexport class GameController extends BaseController<GameModel, GameView> {\n  model: GameModel;\n  view: GameView;\n  /* constructor() {\n    super();\n    this.model = new GameModel();\n\n    this.view = new GameView(this);\n\n  }\n  */\n  init(model: GameModel, view: GameView): void {\n    this.model = model;\n    this.view = view;\n  }\n  update(dt: number): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  setupUI(): void {\n    cc.game.on(cc.game.EVENT_HIDE, () => {\n      this.saveGame();\n    });\n  }\n  saveGame() {\n    const data: SaveData = {\n      gold: this.model.getSaveGoldData(),\n      tomatoSeed: this.model.getSaveTomatoSeedData(),\n      blueberrySeed: this.model.getSaveBlueberrySeedData(),\n      strawberrySeed: this.model.getSaveStrawberrySeedData(),\n      milkCow: this.model.getSaveMilkCowData(),\n\n      worker: this.model.getSaveWorkerData(),\n      machine: this.model.getSaveMachineData(),\n\n      tomato: this.model.getSaveTomatoData(),\n      blueberry: this.model.getSaveBlueberryData(),\n      strawberry: this.model.getSaveStrawberryData(),\n      milk: this.model.getSaveMilkData(),\n\n      timestamp: this.model.getSaveTimeStampData(),\n    };\n    GameSaveManager.save(data);\n  }\n\n  loadGame() {\n    const saved = GameSaveManager.load();\n    if (saved) {\n      this.model.loadGoldFromSave(saved.gold);\n      this.model.loadFromSave(saved.tomato);\n      this.blueberryController.model.loadFromSave(saved.blueberry);\n      this.cowController.model.loadFromSave(saved.cow);\n      this.workerController.model.loadFromSave(saved.worker);\n\n      const offlineDuration = Date.now() - saved.timestamp;\n      this.updateOfflineProgress(offlineDuration);\n    }\n  }\n}\n"]}